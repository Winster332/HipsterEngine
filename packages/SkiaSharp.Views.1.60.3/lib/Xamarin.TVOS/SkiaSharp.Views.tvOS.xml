<doc>
    <assembly>
        <name>SkiaSharp.Views.tvOS</name>
    </assembly>
    <members>
        <member name="T:SkiaSharp.Views.tvOS.AppleExtensions">
            <summary>Various extension methods to convert between SkiaSharp types and CoreGraphics types.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGColor(SkiaSharp.SKColor)">
            <param name="color">The SkiaSharp color.</param>
            <summary>Converts a SkiaSharp color into a CoreGraphics color.</summary>
            <returns>Returns a CoreGraphics color.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKBitmap)">
            <param name="skiaBitmap">The SkiaSharp bitmap.</param>
            <summary>Converts a SkiaSharp bitmap into a CoreGraphics image.</summary>
            <returns>Returns a copy of the bitmap data as a CoreGraphics image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKImage)">
            <param name="skiaImage">The SkiaSharp image.</param>
            <summary>Converts a SkiaSharp image into a CoreGraphics image.</summary>
            <returns>Returns a copy of the image data as a CoreGraphics image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKPixmap)">
            <param name="skiaPixmap">The SkiaSharp pixmap.</param>
            <summary>Converts a SkiaSharp pixmap into a CoreGraphics image.</summary>
            <returns>Returns a copy of the pixel data as a CoreGraphics image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCGImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)">
            <param name="skiaPicture">The SkiaSharp picture.</param>
            <param name="dimensions">The dimensions of the picture.</param>
            <summary>Converts a SkiaSharp picture into a CoreGraphics image.</summary>
            <returns>Returns a copy of the picture as a CoreGraphics image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIColor(SkiaSharp.SKColor)">
            <param name="color">The SkiaSharp color.</param>
            <summary>Converts a SkiaSharp color into a CoreImage color.</summary>
            <returns>Returns a CoreImage color.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKBitmap)">
            <param name="skiaBitmap">The SkiaSharp bitmap.</param>
            <summary>Converts a SkiaSharp bitmap into a CoreImage image.</summary>
            <returns>Returns a copy of the bitmap data as a CoreImage image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKImage)">
            <param name="skiaImage">The SkiaSharp image.</param>
            <summary>Converts a SkiaSharp image into a CoreImage image.</summary>
            <returns>Returns a copy of the image data as a CoreImage image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKPixmap)">
            <param name="skiaPixmap">The SkiaSharp pixmap.</param>
            <summary>Converts a SkiaSharp pixmap into a CoreImage image.</summary>
            <returns>Returns a copy of the pixel data as a CoreImage image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToCIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)">
            <param name="skiaPicture">The SkiaSharp picture.</param>
            <param name="dimensions">The dimensions of the picture.</param>
            <summary>Converts a SkiaSharp picture into a CoreImage image.</summary>
            <returns>Returns a copy of the picture as a CoreImage image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToNSData(SkiaSharp.SKData)">
            <param name="skiaData">The SkiaSharp data object.</param>
            <summary>Converts a SkiaSharp data object into a NSData.</summary>
            <returns>Returns a copy of the data as a NSData.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToPoint(SkiaSharp.SKPoint)">
            <param name="point">The SkiaSharp point.</param>
            <summary>Converts a SkiaSharp point into a CoreGraphics point.</summary>
            <returns>Returns a CoreGraphics point.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToRect(SkiaSharp.SKRect)">
            <param name="rect">The SkiaSharp rectangle.</param>
            <summary>Converts a SkiaSharp rectangle into a CoreGraphics rectangle.</summary>
            <returns>Returns a CoreGraphics rectangle.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSize(SkiaSharp.SKSize)">
            <param name="size">The SkiaSharp size.</param>
            <summary>Converts a SkiaSharp size into a CoreGraphics size.</summary>
            <returns>Returns a CoreGraphics size.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKBitmap(CoreGraphics.CGImage)">
            <param name="cgImage">The CoreGraphics image.</param>
            <summary>Converts a CoreGraphics image into a SkiaSharp bitmap.</summary>
            <returns>Returns a copy of the image data as a SkiaSharp bitmap.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKBitmap(CoreImage.CIImage)">
            <param name="ciImage">The CoreImage image.</param>
            <summary>Converts a CoreImage image into a SkiaSharp bitmap.</summary>
            <returns>Returns a copy of the image data as a SkiaSharp bitmap.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColor(CoreGraphics.CGColor)">
            <param name="color">The CoreGraphics color.</param>
            <summary>Converts a CoreGraphics color into a SkiaSharp color.</summary>
            <returns>Returns a SkiaSharp color.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKColor(CoreImage.CIColor)">
            <param name="color">The CoreImage color.</param>
            <summary>Converts a CoreImage color into a SkiaSharp color.</summary>
            <returns>Returns a SkiaSharp color.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKData(Foundation.NSData)">
            <param name="nsData">The NSData.</param>
            <summary>Converts a NSData into a SkiaSharp data object.</summary>
            <returns>Returns a copy of the data as a SkiaSharp data object.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKImage(CoreGraphics.CGImage)">
            <param name="cgImage">The CoreGraphics image.</param>
            <summary>Converts a CoreGraphics image into a SkiaSharp image.</summary>
            <returns>Returns a copy of the image data as a SkiaSharp image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKImage(CoreImage.CIImage)">
            <param name="ciImage">The CoreImage image.</param>
            <summary>Converts a CoreImage image into a SkiaSharp image.</summary>
            <returns>Returns a copy of the image data as a SkiaSharp image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPixmap(CoreGraphics.CGImage,SkiaSharp.SKPixmap)">
            <param name="cgImage">The CoreGraphics image.</param>
            <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
            <summary>Converts a CoreGraphics image into a SkiaSharp pixmap.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPixmap(CoreImage.CIImage,SkiaSharp.SKPixmap)">
            <param name="ciImage">The CoreImage image.</param>
            <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
            <summary>Converts a CoreImage image into a SkiaSharp pixmap.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKPoint(CoreGraphics.CGPoint)">
            <param name="point">The CoreGraphics point.</param>
            <summary>Converts a CoreGraphics point into a SkiaSharp point.</summary>
            <returns>Returns a SkiaSharp point.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKRect(CoreGraphics.CGRect)">
            <param name="rect">The CoreGraphics rectangle.</param>
            <summary>Converts a CoreGraphics rectangle into a SkiaSharp rectangle.</summary>
            <returns>Returns a SkiaSharp rectangle.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.AppleExtensions.ToSKSize(CoreGraphics.CGSize)">
            <param name="size">The CoreGraphics size.</param>
            <summary>Converts a CoreGraphics size into a SkiaSharp size.</summary>
            <returns>Returns a SkiaSharp size.</returns>
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.Extensions">
            <summary>Various extension methods to convert between SkiaSharp types and System.Drawing types.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingPoint(SkiaSharp.SKPoint)">
            <param name="point">The SkiaSharp point.</param>
            <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
            <returns>Returns a System.Drawing point.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingPoint(SkiaSharp.SKPointI)">
            <param name="point">The SkiaSharp point.</param>
            <summary>Converts a SkiaSharp point into a System.Drawing point.</summary>
            <returns>Returns a System.Drawing point.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingRect(SkiaSharp.SKRect)">
            <param name="rect">The SkiaSharp rectangle.</param>
            <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
            <returns>Returns a System.Drawing rectangle.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingRect(SkiaSharp.SKRectI)">
            <param name="rect">The SkiaSharp rectangle.</param>
            <summary>Converts a SkiaSharp rectangle into a System.Drawing rectangle.</summary>
            <returns>Returns a System.Drawing rectangle.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingSize(SkiaSharp.SKSize)">
            <param name="size">The SkiaSharp size.</param>
            <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
            <returns>Returns a System.Drawing size.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToDrawingSize(SkiaSharp.SKSizeI)">
            <param name="size">The SkiaSharp size.</param>
            <summary>Converts a SkiaSharp size into a System.Drawing size.</summary>
            <returns>Returns a System.Drawing size.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToSKPoint(System.Drawing.Point)">
            <param name="point">The System.Drawing point.</param>
            <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
            <returns>Returns a SkiaSharp point.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToSKPoint(System.Drawing.PointF)">
            <param name="point">The System.Drawing point.</param>
            <summary>Converts a System.Drawing point into a SkiaSharp point.</summary>
            <returns>Returns a SkiaSharp point.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToSKRect(System.Drawing.Rectangle)">
            <param name="rect">The System.Drawing rectangle.</param>
            <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
            <returns>Returns a SkiaSharp rectangle.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToSKRect(System.Drawing.RectangleF)">
            <param name="rect">The System.Drawing rectangle.</param>
            <summary>Converts a System.Drawing rectangle into a SkiaSharp rectangle.</summary>
            <returns>Returns a SkiaSharp rectangle.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToSKSize(System.Drawing.Size)">
            <param name="size">The System.Drawing size.</param>
            <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
            <returns>Returns a SkiaSharp size.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.Extensions.ToSKSize(System.Drawing.SizeF)">
            <param name="size">The System.Drawing size.</param>
            <summary>Converts a System.Drawing size into a SkiaSharp size.</summary>
            <returns>Returns a SkiaSharp size.</returns>
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.iOSExtensions">
            <summary>Various extension methods to convert between SkiaSharp types and UIKit types.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKBitmap(UIKit.UIImage)">
            <param name="uiImage">The UIKit image.</param>
            <summary>Converts a UIKit image into a SkiaSharp bitmap.</summary>
            <returns>Returns a copy of the image data as a SkiaSharp bitmap.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKColor(UIKit.UIColor)">
            <param name="color">The UIKit color</param>
            <summary>Converts a UIKit color into a SkiaSharp color.</summary>
            <returns>Returns a SkiaSharp color.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKImage(UIKit.UIImage)">
            <param name="uiImage">The UIKit image.</param>
            <summary>Converts a UIKit image into a SkiaSharp image.</summary>
            <returns>Returns a copy of the image data as a SkiaSharp image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToSKPixmap(UIKit.UIImage,SkiaSharp.SKPixmap)">
            <param name="uiImage">The UIKit image.</param>
            <param name="pixmap">The SkiaSharp pixmap to hold the copy of the image data.</param>
            <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
            <returns>Returns <see langword="true" /> if the copy was successful, otherwise <see langword="false" />.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIColor(SkiaSharp.SKColor)">
            <param name="color">The SkiaSharp color</param>
            <summary>Converts a SkiaSharp color into a UIKit color.</summary>
            <returns>Returns a UIKit color.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap)">
            <param name="skiaBitmap">The SkiaSharp bitmap.</param>
            <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
            <returns>Returns a copy of the bitmap data as a UIKit image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKImage)">
            <param name="skiaImage">The SkiaSharp image.</param>
            <summary>Converts a SkiaSharp image into a UIKit image.</summary>
            <returns>Returns a copy of the image data as a UIKit image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap)">
            <param name="skiaPixmap">The SkiaSharp pixmap.</param>
            <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
            <returns>Returns a copy of the pixel data as a UIKit image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI)">
            <param name="skiaPicture">The SkiaSharp picture.</param>
            <param name="dimensions">The dimensions of the picture.</param>
            <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
            <returns>Returns a copy of the picture as a UIKit image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKBitmap,System.nfloat,UIKit.UIImageOrientation)">
            <param name="skiaBitmap">The SkiaSharp bitmap.</param>
            <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
            <param name="orientation">The rotation that is to be applied to the image.</param>
            <summary>Converts a SkiaSharp bitmap into a UIKit image.</summary>
            <returns>Returns a copy of the bitmap data as a UIKit image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPixmap,System.nfloat,UIKit.UIImageOrientation)">
            <param name="skiaPixmap">The SkiaSharp pixmap.</param>
            <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
            <param name="orientation">The rotation that is to be applied to the image.</param>
            <summary>Converts a SkiaSharp pixmap into a UIKit image.</summary>
            <returns>Returns a copy of the pixel data as a UIKit image.</returns>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.iOSExtensions.ToUIImage(SkiaSharp.SKPicture,SkiaSharp.SKSizeI,System.nfloat,UIKit.UIImageOrientation)">
            <param name="skiaPicture">The SkiaSharp picture.</param>
            <param name="dimensions">The dimensions of the picture.</param>
            <param name="scale">The scale factor for the image. A factor of 1.0 is the original size of the image.</param>
            <param name="orientation">The rotation that is to be applied to the image.</param>
            <summary>Converts a SkiaSharp picture into a UIKit image.</summary>
            <returns>Returns a copy of the picture as a UIKit image.</returns>
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.ISKCanvasLayerDelegate">
            <summary>Delegate interface for <see cref="T:SkiaSharp.Views.tvOS.SKCanvasLayer" />.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.ISKCanvasLayerDelegate.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)">
            <param name="surface">The surface to draw on.</param>
            <param name="info">The information about the surface.</param>
            <summary>Implement this to draw on the canvas.</summary>
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.ISKGLLayerDelegate">
            <summary>Delegate interface for <see cref="T:SkiaSharp.Views.tvOS.SKGLLayer" />.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.ISKGLLayerDelegate.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)">
            <param name="surface">The surface to draw on.</param>
            <param name="renderTarget">The render target that is currently being drawn.</param>
            <summary>Implement this to draw on the render target.</summary>
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.SKCanvasLayer">
            <summary>A CoreAnimation layer that can be drawn on using SkiaSharp drawing commands.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKCanvasLayer">
            <summary>Default constructor that initializes a new instance of <see cref="T:SkiaSharp.Views.tvOS.SKCanvasLayer" />.</summary>
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKCanvasLayer.CanvasSize">
            <summary>Gets the current canvas size.</summary>
            <value />
            <remarks>The canvas size may be different to the view size as a result of the current device's pixel density.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasLayer.Dispose(System.Boolean)">
            <param name="disposing">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasLayer.DrawInContext(CoreGraphics.CGContext)">
            <param name="ctx">The prepared context to draw into.</param>
            <summary>Draws the layer on the specified context.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasLayer.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)">
            <param name="surface">The surface to draw on.</param>
            <param name="info">The information about the surface.</param>
            <summary>Implement this to draw on the canvas.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKCanvasLayer.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKCanvasLayer.PaintSurface" /> event. If the method is overridden, then the base must be called.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[public override void DrawInSurface (SKSurface surface, SKImageInfo info)
{
    // call the base method
    base.DrawInSurface (surface, info);

    var surfaceWidth = info.Width;
    var surfaceHeight = info.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
}]]></code>
                </example>
            </remarks>
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKCanvasLayer.IgnorePixelScaling">
            <summary>Gets or sets a value indicating whether the drawing canvas should be resized on high resolution displays.</summary>
            <value />
            <remarks>By default, when false, the canvas is resized to 1 canvas pixel per display pixel. When true, the canvas is resized to device independent pixels, and then stretched to fill the view. Although performance is improved and all objects are the same size on different display densities, blurring and pixelation may occur.</remarks>
        </member>
        <member name="E:SkiaSharp.Views.tvOS.SKCanvasLayer.PaintSurface">
            <summary>Occurs when the the canvas needs to be redrawn.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKCanvasLayer.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKCanvasLayer.PaintSurface" /> event.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[SKCanvasLayer myLayer = ...;

myLayer.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.Info.Width;
    var surfaceHeight = e.Info.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
};]]></code>
                </example>
            </remarks>
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKCanvasLayer.SKDelegate">
            <summary>Gets or sets the layer's delegate object.</summary>
            <value />
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.SKCanvasView">
            <summary>A UIKit view that can be drawn on using SkiaSharp drawing commands.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKCanvasView">
            <summary>Default constructor that initializes a new instance of <see cref="T:SkiaSharp.Views.tvOS.SKCanvasView" />.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKCanvasView(CoreGraphics.CGRect)">
            <param name="frame">The frame used by the view, expressed in tvOS points.</param>
            <summary>Initializes the <see cref="T:SkiaSharp.Views.tvOS.SKCanvasView" /> with the specified frame.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKCanvasView(System.IntPtr)">
            <param name="p">The pointer (handle) to the unmanaged object.</param>
            <summary>A constructor used when creating managed representations of unmanaged objects; Called by the runtime.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasView.AwakeFromNib">
            <summary>Called after the object has been loaded from the nib file. Overriders must call the base method.</summary>
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKCanvasView.CanvasSize">
            <summary>Gets the current canvas size.</summary>
            <value />
            <remarks>The canvas size may be different to the view size as a result of the current device's pixel density.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasView.Dispose(System.Boolean)">
            <param name="disposing">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasView.Draw(CoreGraphics.CGRect)">
            <param name="rect">The rectangle to draw.</param>
            <summary>Draws the view within the passed-in rectangle.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)">
            <param name="surface">The surface to draw on.</param>
            <param name="info">The information about the surface.</param>
            <summary>Implement this to draw on the canvas.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKCanvasView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKCanvasView.PaintSurface" /> event. If the method is overridden, then the base must be called.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[protected override void DrawInSurface (SKSurface surface, SKImageInfo info)
{
    // call the base method
    base.DrawInSurface (surface, info);

    var surfaceWidth = info.Width;
    var surfaceHeight = info.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
}]]></code>
                </example>
            </remarks>
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKCanvasView.IgnorePixelScaling">
            <summary>Gets or sets a value indicating whether the drawing canvas should be resized on high resolution displays.</summary>
            <value />
            <remarks>By default, when false, the canvas is resized to 1 canvas pixel per display pixel. When true, the canvas is resized to device independent pixels, and then stretched to fill the view. Although performance is improved and all objects are the same size on different display densities, blurring and pixelation may occur.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKCanvasView.LayoutSubviews">
            <summary>Lays out subviews.</summary>
            <remarks />
        </member>
        <member name="E:SkiaSharp.Views.tvOS.SKCanvasView.PaintSurface">
            <summary>Occurs when the the canvas needs to be redrawn.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKCanvasView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKCanvasView.PaintSurface" /> event.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[SKCanvasView myView = ...;

myView.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.Info.Width;
    var surfaceHeight = e.Info.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
};]]></code>
                </example>
            </remarks>
        </member>
        <member name="T:SkiaSharp.Views.tvOS.SKGLLayer">
            <summary>A CoreAnimation OpenGL layer that can be drawn on using SkiaSharp drawing commands.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKGLLayer">
            <summary>Default constructor that initializes a new instance of <see cref="T:SkiaSharp.Views.tvOS.SKGLLayer" />.</summary>
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKGLLayer.CanvasSize">
            <summary>Gets the current canvas size.</summary>
            <value />
            <remarks>The canvas size may be different to the view size as a result of the current device's pixel density.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKGLLayer.Dispose(System.Boolean)">
            <param name="disposing">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKGLLayer.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)">
            <param name="surface">The surface to draw on.</param>
            <param name="renderTarget">The render target that is currently being drawn.</param>
            <summary>Implement this to draw on the canvas.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKGLLayer.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKGLLayer.PaintSurface" /> event. If the method is overridden, then the base must be called.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[public override void DrawInSurface (SKSurface surface, SKBackendRenderTargetDesc renderTarget)
{
    // call the base method
    base.DrawInSurface (surface, renderTarget);

    var surfaceWidth = renderTarget.Width;
    var surfaceHeight = renderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
}]]></code>
                </example>
                <para />
            </remarks>
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKGLLayer.Frame">
            <summary>Gets or sets the layer's frame rectangle.</summary>
            <value />
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKGLLayer.GRContext">
            <summary>Gets the current GPU context.</summary>
            <value />
            <remarks />
        </member>
        <member name="E:SkiaSharp.Views.tvOS.SKGLLayer.PaintSurface">
            <summary>Occurs when the the canvas needs to be redrawn.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKGLLayer.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKGLLayer.PaintSurface" /> event.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[SKGLLayer myLayer = ...;

myLayer.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.Info.Width;
    var surfaceHeight = e.Info.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
};]]></code>
                </example>
            </remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKGLLayer.Render">
            <summary>Redraws the layer's contents.</summary>
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKGLLayer.SKDelegate">
            <summary>Gets or sets the layer's delegate object.</summary>
            <value />
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.SKGLView">
            <summary>A hardware-accelerated view that can be drawn on using SkiaSharp drawing commands.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKGLView">
            <summary>Default constructor that initializes a new instance of <see cref="T:SkiaSharp.Views.tvOS.SKGLView" />.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKGLView(CoreGraphics.CGRect)">
            <param name="frame">The frame used by the view, expressed in tvOS points.</param>
            <summary>Initializes the <see cref="T:SkiaSharp.Views.tvOS.SKGLView" /> with the specified frame.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKGLView(System.IntPtr)">
            <param name="p">The pointer (handle) to the unmanaged object.</param>
            <summary>A constructor used when creating managed representations of unmanaged objects; Called by the runtime.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKGLView.AwakeFromNib">
            <summary>Called after the object has been loaded from the nib file. Overriders must call the base method.</summary>
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKGLView.CanvasSize">
            <summary>Gets the current canvas size.</summary>
            <value />
            <remarks>The canvas size may be different to the view size as a result of the current device's pixel density.</remarks>
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKGLView.DrawInRect(GLKit.GLKView,CoreGraphics.CGRect)">
            <param name="view">The view to draw on.</param>
            <param name="rect">The rectangle to draw.</param>
            <summary>Draws the view within the passed-in rectangle.</summary>
            <remarks />
        </member>
        <member name="M:SkiaSharp.Views.tvOS.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)">
            <param name="surface">The surface to draw on.</param>
            <param name="renderTarget">The render target that is currently being drawn.</param>
            <summary>Implement this to draw on the canvas.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKGLView.PaintSurface" /> event. If the method is overridden, then the base must be called.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[public override void DrawInSurface (SKSurface surface, SKBackendRenderTargetDesc renderTarget)
{
    // call the base method
    base.DrawInSurface (surface, renderTarget);

    var surfaceWidth = renderTarget.Width;
    var surfaceHeight = renderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
}]]></code>
                </example>
            </remarks>
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKGLView.Frame">
            <summary>Gets or sets the view's frame rectangle.</summary>
            <value />
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKGLView.GRContext">
            <summary>Gets the current GPU context.</summary>
            <value />
            <remarks />
        </member>
        <member name="E:SkiaSharp.Views.tvOS.SKGLView.PaintSurface">
            <summary>Occurs when the surface needs to be redrawn.</summary>
            <remarks>
                <para>There are two ways to draw on this surface: by overriding the <see cref="M:SkiaSharp.Views.tvOS.SKGLView.DrawInSurface(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)" /> method, or by attaching a handler to the <see cref="E:SkiaSharp.Views.tvOS.SKGLView.PaintSurface" /> event.</para>
                <para />
                <example>
                    <code lang="C#"><![CDATA[SKGLView myView = ...;

myView.PaintSurface += (sender, e) => {
    var surface = e.Surface;
    var surfaceWidth = e.RenderTarget.Width;
    var surfaceHeight = e.RenderTarget.Height;

    var canvas = surface.Canvas;

    // draw on the canvas
    canvas.Flush ();
};]]></code>
                </example>
            </remarks>
        </member>
        <member name="T:SkiaSharp.Views.tvOS.SKPaintGLSurfaceEventArgs">
            <summary>Provides data for the <see cref="E:SkiaSharp.Views.tvOS.SKGLView.PaintSurface" /> event.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKPaintGLSurfaceEventArgs(SkiaSharp.SKSurface,SkiaSharp.GRBackendRenderTargetDesc)">
            <param name="surface">The surface that is being drawn on.</param>
            <param name="renderTarget">The render target that is currently being drawn.</param>
            <summary>Creates a new instance of the <see cref="T:SkiaSharp.Views.tvOS.SKPaintGLSurfaceEventArgs" /> event arguments.</summary>
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKPaintGLSurfaceEventArgs.RenderTarget">
            <summary>Gets the render target that is currently being drawn.</summary>
            <value />
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKPaintGLSurfaceEventArgs.Surface">
            <summary>Gets the surface that is currently being drawn on.</summary>
            <value />
            <remarks />
        </member>
        <member name="T:SkiaSharp.Views.tvOS.SKPaintSurfaceEventArgs">
            <summary>Provides data for the <see cref="E:SkiaSharp.Views.tvOS.SKCanvasView.PaintSurface" /> event.</summary>
            <remarks />
        </member>
        <member name="C:SkiaSharp.Views.tvOS.SKPaintSurfaceEventArgs(SkiaSharp.SKSurface,SkiaSharp.SKImageInfo)">
            <param name="surface">The surface that is being drawn on.</param>
            <param name="info">The information about the surface.</param>
            <summary>Creates a new instance of the <see cref="T:SkiaSharp.Views.tvOS.SKPaintSurfaceEventArgs" /> event arguments.</summary>
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKPaintSurfaceEventArgs.Info">
            <summary>Gets the information about the surface that is currently being drawn.</summary>
            <value />
            <remarks />
        </member>
        <member name="P:SkiaSharp.Views.tvOS.SKPaintSurfaceEventArgs.Surface">
            <summary>Gets the surface that is currently being drawn on.</summary>
            <value />
            <remarks />
        </member>
    </members>
</doc>
